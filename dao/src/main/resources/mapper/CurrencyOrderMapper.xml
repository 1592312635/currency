<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minyan.dao.CurrencyOrderMapper">

    <resultMap type="com.minyan.po.CurrencyOrderPO" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="orderNo" column="order_no"/>
        <result property="behaviorCode" column="behavior_code"/>
        <result property="status" column="status"/>
        <result property="amount" column="amount"/>
        <result property="failAmount" column="fail_amount"/>
        <result property="expireAmount" column="expire_amount"/>
        <result property="currencyType" column="currency_type"/>
        <result property="handleType" column="handle_type"/>
        <result property="expireTime" column="expire_time"/>
        <result property="scheduleTime" column="schedule_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delTag" column="del_tag"/>
    </resultMap>

    <sql id="Base_Fragment_SQL">
        id, user_id, order_no, behavior_code, status, amount, fail_amount,expire_amount, currency_type, handle_type,
        expire_time, schedule_time, create_time, update_time, del_tag
    </sql>

    <insert id="insertSelective" parameterType="com.minyan.po.CurrencyOrderPO">
        insert into currency_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="behaviorCode != null">
                behavior_code,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="failAmount != null">
                fail_amount,
            </if>
            <if test="expireAmount != null">
                expire_amount,
            </if>
            <if test="currencyType != null">
                currency_type,
            </if>
            <if test="handleType != null">
                handle_type,
            </if>
            <if test="expireTime != null">
                expire_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="behaviorCode != null">
                #{behaviorCode,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="failAmount != null">
                #{failAmount,jdbcType=DECIMAL},
            </if>
            <if test="expireAmount != null">
                #{expireAmount,jdbcType=DECIMAL},
            </if>
            <if test="currencyType != null">
                #{currencyType,jdbcType=INTEGER},
            </if>
            <if test="handleType != null">
                #{handleType,jdbcType=INTEGER},
            </if>
            <if test="expireTime != null">
                #{expireTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="queryOrdersByStatusList" resultMap="BaseResultMap">
        select
        <include refid="Base_Fragment_SQL"/>
        from currency_order
        where del_tag = 0
        <if test="userId != null">
            and user_id = #{userId,jdbcType=VARCHAR}
        </if>
        <if test="currencyType != null">
            and currency_type = #{currencyType,jdbcType=INTEGER}
        </if>
        <if test="handleType != null">
            and handle_type = #{handleType,jdbcType=INTEGER}
        </if>
        <if test="statusList != null">
            and status in
            <foreach collection="statusList" item="status" open="(" separator="," close=")">
                #{status,jdbcType=INTEGER}
            </foreach>
        </if>
        order by create_time
        limit #{pageNum,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>

    <update id="updateStatusAndAmountById" parameterType="com.minyan.po.CurrencyOrderPO">
        update currency_order
        <set>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="failAmount != null">
                fail_amount = #{failAmount,jdbcType=DECIMAL},
            </if>
            <if test="expireAmount != null">
                expire_amount = #{expireAmount,jdbcType=DECIMAL},
            </if>
        </set>
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </update>

    <select id="queryExpireOrders" resultMap="BaseResultMap">
        select
        <include refid="Base_Fragment_SQL"/>
        from currency_order
        where del_tag = 0
        <if test="handleType != null">
            and handle_type = #{handleType,jdbcType=INTEGER}
        </if>
        <if test="statusList != null">
            and status in
            <foreach collection="statusList" item="status" open="(" separator="," close=")">
                #{status,jdbcType=INTEGER}
            </foreach>
        </if>
        and expire_time &lt;= now()
        and schedule_time &lt;= now()
        order by id
        limit #{pageSize,jdbcType=INTEGER}
    </select>

    <update id="updateScheduleTimeById">
        update currency_order
        set schedule_time = #{scheduleTime,jdbcType=TIMESTAMP}
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </update>

    <select id="queryOrderExist" resultMap="BaseResultMap">
        select
        <include refid="Base_Fragment_SQL"/>
        from currency_order
        where del_tag = 0
        and user_id = #{userId,jdbcType=VARCHAR}
        and order_no = #{orderNo,jdbcType=VARCHAR}
        and currency_type = #{currencyType,jdbcType=INTEGER}
        limit 1
    </select>

</mapper>